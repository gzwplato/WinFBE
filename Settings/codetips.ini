' Codetips for built in FB keywords. The key must be stored in uppercase.
ABS=Abs(number)
ACOS=Acos(number)
ALLOCATE=Allocate(count) 
ASSERT=Assert(expression)
ASSERTWARN=AssertWarn(expression)
ASC=Asc(string [, position=1 ])
ASIN=Asin(number) 
ATAN2=ATan2(y, x)
ATN=Atn(number)
BIN=Bin(number [, digits ])
BIT=Bit(value, bit_number)
BITRESET=BitReset(value, bit_number)
BITSET=BitSet(value, bit_number)
BLOAD=BLoad(filename [, [ dest ] [, pal ] ])
BSAVE=BSave(filename, source [,[ size ][,[ pal ][, bitsperpixel ]]])
CALLOCATE=CAllocate(num_elements [, size=1 ])
CAST=Cast(datatype, expression)
CBOOL=Cbool(numeric|string|type expression)
CBYTE=CByte(numeric|string|type expression)
CDBL=CDbl(numeric|string|type expression)
CHAIN=Chain(program)
CHDIR=ChDir(path)
CHR=Chr(ch0 [, ch1 ... chN ])
CINT=CInt(numeric|string|type expression)
CLEAR=Clear(dst, [value], bytes)
CLNG=CLng(numeric|string|type expression)
CLNGINT=CLngInt(numeric|string|type expression)
CLOSE=Close([#filenum])
CONDBROADCAST=CondBroadcast(handle)
CONDDESTROY=CondDestroy(handle)
CONDSIGNAL=CondSignal(handle)
CONDWAIT=CondWait(handle, mutex)
COS=Cos(angle)
CPTR=CPtr(PointerDataType, expression)
CSHORT=CShort(numeric|string|type expression)
CSIGN=CSign(expression)
CSNG=CSng(numeric|string|type expression)
CUBYTE=CUByte(numeric|string|type expression)
CUINT=CUInt(numeric|string|type expression)
CULNG=CULng(numeric|string|type expression)
CULNGINT=CULNGINT(numeric|string|type expression)
CUNSG=CUnsg(expression)
CUSHORT=CUShort(numeric|string|type expression)
CVD=CVD(numeric|string)
CVI=CVI(numeric|string)
CVL=CVL(numeric|string)
CVLONGINT=CVLongInt(numeric|string)
CVS=CVS(numeric|string)
CVSHORT=CVShort(string)
DATEADD=DateAdd(interval, number, date_serial)
DATEDIFF=DateDiff(interval, date_serial1, date_serial2 [, firstdayofWeek [, firstweekofyear ] ])
DATEPART=DatePart(interval, date_serial, first_dayofWeek [, first_week_of_year ])
DATESERIAL=DateSerial(year, month, day)
DATEVALUE=DateValue(date_string)
DAY=Day(date_serial)
DEALLOCATE=Deallocate(pointer)
DIR=Dir(item_spec, [ attrib_mask ], out_attrib ])
DYLIBFREE=DyLibFree(library)
DYLIBLOAD=DyLibLoad(filename)
DYLIBSYMBOL=DyLibSymbol(library, symbol)
ENVIRON=Environ(varname)
EOF=EOF(filenum)
ERASE=Erase(array0 [, array1 ... arrayN ])
EXEC=Exec(program, arguments)
EXP=Exp(number)
FILEATTR=FileAttr(filenum, [ returntype=1 ])
FILECOPY=FileCopy(source, destination)
FILEDATETIME=FileDateTime(filename)
FILEEXISTS=FileExists(filename)
FILELEN=FileLen(filename)
FIX=Fix(number)
FORMAT=Format(numerical_expression, formatting_expression)
FRAC=Frac(number)
FRE=Fre([ value=0 ])
GET=Get(#filenum, position, data [, [amount] [, bytesread ] ])
GETJOYSTICK=GetJoystick(id[, buttons[, a1[, a2[, a3[, a4[, a5[, a6[, a7[, a8]]]]]]]]])
GETMOUSE=GetMouse (x, y [, [ wheel ] [, [ buttons ] [, [ clip ]]]])
HEX=Hex(number [, digits ])
HIBYTE=HiByte(expr)
HIWORD=HiWord(expr)
HOUR=Hour(dateserial)
IMAGECONVERTROW=ImageConvertRow(src, src_bpp, dst, dst_bpp, width [, isrgb ])
IMAGECREATE=ImageCreate(width, height [, [ color ][, depth ]])
IMAGEDESTROY=ImageDestroy(image)
IMAGEINFO=ImageInfo(image [, [width] [, [height] [, [bypp] [, [pitch] [, [pixdata] [, size]]]]]])
INP=Inp(port)
INSTR=InStr([ start, ] string, [ Any ] substring)
INSTRREV=InStrRev(string, [ Any ] substring [, start ])
INT=Int(number)
ISDATE=IsDate(stringdate)
ISREDIRECTED=IsRedirected(is_input)
KILL=Kill(filename)
LBOUND=LBound(array [, dimension=1 ])
LCASE=LCase(string [ , mode=0 ])
LEFT=Left(string, n)
LEN=Len(expression)
LOBYTE=LoByte(expr)
LOC=LOC(filenum)
LOCATE=Locate([row], [column], [state])
LOF=LOF(filenum)
LOG=Log(number)
LOWORD=LoWord(expr)
LPOS=LPOS(printer)
LSET=LSet(dst_string, src_string)
LTRIM=LTrim(str [, [ Any ] trimset ])
MID=Mid(str, start [, n ])
MINUTE=Minute(date_serial)
MKD=MKD(number)
MKDIR=MkDir(folder)
MKI=MKI(number)
MKL=MKL(number)
MKLONGINT=MKLongInt(number)
MKS=MKS(number)
MKSHORT=MKShort(number)
MONTH=Month(date_serial)
MONTHNAME=MonthName(month_number [, abreviate=0 ])
MULTIKEY=MultiKey(scancode)
MUTEXDESTROY=MutexDestroy(id)
MUTEXLOCK=MutexLock(id)
MUTXUNLOCK=MutexUnlock(id)
NAME=Name(oldname, newname)
OCT=Oct(number [, digits ])
OFFSETOF=OffsetOf(typename, fieldname)
PEEK=Peek([ datatype, ] address)
PMAP=PMap(coord, func)
POINT=Point(coord_x, coord_y [,buffer])
POINTCOORD=PointCoord(func)
PUT=Put(#filenum, position, data [, amount])
REALLOCATE=Reallocate(pointer, count)
RGB=RGB(red, green, blue)
RGBA=RGBA(red, green, blue, alpha)
RIGHT=Right(string, ncount)
RMDIR=RmDir(folder)
RND=Rnd(seed)
RSET=RSet(dst, src)
RTRIM=RTrim(str [, [ Any ] trimset ])
RUN=Run(program [, arguments="" ])
SADD=SAdd(string)
SCREEN=Screen(row, column [, colorflag=0 ])
SCREENEVENT=ScreenEvent([ event=0 ])
SCREENLIST=ScreenList([ depth=0 ])
SCREENRES=ScreenRes(width, height [, [depth] [, [num_pages] [, [flags] [, refresh_rate ]]]])
SECOND=Second(date_serial)
SETDATE=SetDate(newdate)
SETENVIRON=SetEnviron(varexpression)
SETMOUSE=SetMouse([ x ] [, [ y ] [, [ visibility ] [, [ clip ]]]])
SETTIME=SetTime(newtime)
SGN=Sgn(number)
SHELL=Shell(command)
SIN=Sin(angle)
SIZEOF=SizeOf(variable | DataType)
SPACE=Space(count)
SPC=Spc(spaces)
SQR=Sqr(number)
STICK=Stick(axis)
STR=Str(number|string)
STRIG=Strig(button)
STRING=String(count, ch_code)
STRPTR=StrPtr(string)
TAB=Tab(column)
TAN=Tan(angle)
THREADCREATE=ThreadCreate(procptr [, [ param ] [, stack_size ] ])
THREADDETACH=ThreadDetach(id)
THREADWAIT=ThreadWait(id)
TIMESERIAL=TimeSerial(hours, minutes, seconds)
TIMEVALUE=TimeValue(timestring)
TRIM=Trim(string [, [ Any ] trimset ])
TYPEOF=TypeOf(variable|datatype)
UBOUND=UBound(array [, dimension=1 ])
UCASE=UCase(str [ , mode=0 ])
VAL=Val(strnum)
VALLNG=ValLng(strnum)
VALINT=ValInt(strnum)
VALUINT=ValUInt(strnum)
VALULNG=ValULng(strnum)
VARPTR=VarPtr(variable)
WBIN=WBin(number [, digits])
WCHR=WChr(ch0 [, ch1 ... chN ])
WEEKDAY=Weekday(date_serial [, firstdayofweek ])
WEEKDAYNAME=WeekdayName(weekday [, abbreviate [, firstdayofweek ] ])
WHEX=WHex(number [, digits ])
WINPUT=WInput(num [, [#]filenum ])
WOCT=WOct(number [, digits ])
WSPACE=WSpace(count)
WSTR=WStr(number|string)
WSTRING=WString(count, ch_code)
YEAR=Year(date_serial)







